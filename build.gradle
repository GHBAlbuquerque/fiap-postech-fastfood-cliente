plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.fiap'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.2.0'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-cognitoidp', version: '1.12.720'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.720'
	implementation group: 'software.amazon.awssdk', name: 'cognitoidentity', version: '2.25.50'
	implementation group: 'software.amazon.awssdk', name: 'cognitoidentityprovider', version: '2.25.50'
	implementation 'org.apache.logging.log4j:log4j-api'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.hibernate.validator:hibernate-validator'
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.4.0'
	testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	testLogging {
		events "passed", "failed", "skipped"
	}
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.9"
}


jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = false
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com/fiap/fastfood/common/exceptions/*/**',
					'com/fiap/fastfood/core/entity/**',
					'com/fiap/fastfood/common/dto/*/**',
					'com/fiap/fastfood/common/validation/**'
			])
		}))
	}
}